<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.littlefisher</groupId>
  <artifactId>littlefisher-parent</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>littlefisher-parent</name>
  <description>littlefisher-parent</description>

  <modules>
    <module>../core-base</module>
    <module>../core-activiti</module>
    <module>../blog-parent</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jdk.version>1.8</jdk.version>
    <!-- spring版本号 -->
    <spring.version>5.0.0.RELEASE</spring.version>
    <!--<servlet.version>2.5</servlet.version>-->
    <!-- mybatis版本号 -->
    <mybatis.version>3.4.1</mybatis.version>
    <!-- log4j日志文件管理包版本 -->
    <slf4j.version>1.7.21</slf4j.version>
    <log4j.version>1.2.17</log4j.version>
    <!--<littlefisher.version>1.0.1-SNAPSHOT</littlefisher.version>-->
    <activiti.version>5.21.0</activiti.version>

    <!-- Swagger-UI相关版本号 -->
    <swagger-springmvc.version>1.0.2</swagger-springmvc.version>
    <classmate.version>1.3.3</classmate.version>

    <!-- MyBatis通用Mapper -->
    <mapper.version>3.4.0</mapper.version>
    <mybatis.generator.version>1.3.5</mybatis.generator.version>
    <!--mysql连接-->
    <mysql.version>5.1.29</mysql.version>
    <!--aop切面-->
    <aspectjweaver.version>1.8.11</aspectjweaver.version>
    <!--Spring连接MyBatis的jar-->
    <mybatis-spring.version>1.3.1</mybatis-spring.version>
    <!--阿里数据源-->
    <druid.version>1.1.4</druid.version>
    <!--单元测试-->
    <junit.version>4.12</junit.version>
    <!--MyBatis分页插件-->
    <pagehelper.version>5.1.2</pagehelper.version>
    <!--工具jar-->
    <commons-lang3.version>3.6</commons-lang3.version>
    <!--文件上传-->
    <commons-fileupload.version>1.3.3</commons-fileupload.version>
    <!--本地文件处理，例如properties文件-->
    <commons-configuration.version>2.1.1</commons-configuration.version>
    <!--对json处理的工具-->
    <gson.version>2.8.2</gson.version>
    <!--谷歌封装的常用工具-->
    <guava.version>23.0</guava.version>
    <!--对json的解析-->
    <jackson.version>2.9.1</jackson.version>

    <!--maven插件-->
    <maven-war-plugin.version>2.4</maven-war-plugin.version>
    <!--jetty，类似于tomcat-->
    <jetty-maven-plugin.version>9.4.7.v20170914</jetty-maven-plugin.version>
    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
    <maven-source-plugin.version>3.0.0</maven-source-plugin.version>
    <!--MyBatis自动生成插件-->
    <mybatis-generator-maven-plugin.version>1.3.5</mybatis-generator-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- spring核心包 -->
      <!-- springframework start -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-oxm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- springframe end -->
      <!-- aspectjweaver.jar这是Spring AOP所要用到的包 -->
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>${aspectjweaver.version}</version>
      </dependency>
      <!-- mybatis核心包 -->
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>${mybatis.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis.generator</groupId>
        <artifactId>mybatis-generator-core</artifactId>
        <version>${mybatis.generator.version}</version>
      </dependency>
      <dependency>
        <groupId>tk.mybatis</groupId>
        <artifactId>mapper</artifactId>
        <version>${mapper.version}</version>
      </dependency>
      <!-- mybatis/spring包 -->
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis-spring</artifactId>
        <version>${mybatis-spring.version}</version>
      </dependency>
      <!-- mysql驱动包 -->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
      </dependency>
      <!-- junit测试包 -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <!--<scope>test</scope>-->
      </dependency>
      <!-- 阿里巴巴数据源包 -->
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>${druid.version}</version>
      </dependency>
      <!-- Gson包 -->
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>
      <!-- 日志文件管理包 -->
      <!-- log start -->
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- 分页插件 -->
      <dependency>
        <groupId>com.github.pagehelper</groupId>
        <artifactId>pagehelper</artifactId>
        <version>${pagehelper.version}</version>
      </dependency>

      <!-- 其他第三方 -->
      <!--常用工具jar包-->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <!-- 文件上传 -->
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>${commons-fileupload.version}</version>
      </dependency>
      <!--文件读取jar包，例如property-->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-configuration2</artifactId>
        <version>${commons-configuration.version}</version>
      </dependency>
      <!-- log end -->
      <!-- Jackson fasterxml和codehaus的区别： -->
      <!-- 他们是Jackson的两大分支、也是两个版本的不同包名。Jackson从2.0开始改用新的包名fasterxml；
      1.x版本的包名是codehaus。除了包名不同，他们的Maven artifact id也不同。1.x版本现在只提供bug-fix，而2.x版本还在不断开发和发布中。如果是新项目，建议直接用2x，即fasterxml
        jackson。 -->
      <!-- https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-core-asl -->
      <!-- <dependency> -->
      <!-- <groupId>org.codehaus.jackson</groupId> -->
      <!-- <artifactId>jackson-core-asl</artifactId> -->
      <!-- <version>1.9.13</version> -->
      <!-- </dependency> -->
      <!-- https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl -->
      <!-- <dependency> -->
      <!-- <groupId>org.codehaus.jackson</groupId> -->
      <!-- <artifactId>jackson-mapper-asl</artifactId> -->
      <!-- <version>1.9.13</version> -->
      <!-- </dependency> -->

      <!-- swagger-springmvc -->
      <dependency>
        <groupId>com.mangofactory</groupId>
        <artifactId>swagger-springmvc</artifactId>
        <version>${swagger-springmvc.version}</version>
      </dependency>
      <dependency>
        <groupId>com.mangofactory</groupId>
        <artifactId>swagger-models</artifactId>
        <version>${swagger-springmvc.version}</version>
      </dependency>
      <!-- swagger-springmvc dependencies -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <!--<dependency>-->
        <!--<groupId>com.fasterxml.jackson.core</groupId>-->
        <!--<artifactId>jackson-annotations</artifactId>-->
        <!--<version>${jackson.version}</version>-->
      <!--</dependency>-->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <!--<dependency>-->
        <!--<groupId>com.fasterxml.jackson.core</groupId>-->
        <!--<artifactId>jackson-core</artifactId>-->
        <!--<version>${jackson.version}</version>-->
      <!--</dependency>-->
      <dependency>
        <groupId>com.fasterxml</groupId>
        <artifactId>classmate</artifactId>
        <version>${classmate.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- 定义可继承的插件信息 -->
  <build>

    <!--<sourceDirectory>src/main/java</sourceDirectory>-->
    <!--<testSourceDirectory>src/test/java</testSourceDirectory>-->
    <resources>
      <resource>
        <directory>${basedir}/src/main/java</directory>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/src/test/java</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <pluginManagement>
      <plugins>
        <!-- 编译插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${jdk.version}</source>
            <target>${jdk.version}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <fork>true</fork>
            <meminitial>512m</meminitial>
            <maxmem>2048m</maxmem>
          </configuration>
        </plugin>
        <!-- 资源文件插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
          <executions>
            <execution>
              <phase>compile</phase>
            </execution>
          </executions>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>
        <!-- 生成sources源码包的插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- 将工程依赖的jar都一起打包 -->
        <!-- <plugin> -->
        <!-- <artifactId>maven-assembly-plugin</artifactId> -->
        <!-- <version>2.5.2</version> -->
        <!-- <configuration> -->
        <!-- <descriptorRefs> -->
        <!-- <descriptorRef>jar-with-dependencies</descriptorRef> -->
        <!-- </descriptorRefs> -->
        <!-- </configuration> -->
        <!-- <executions> -->
        <!-- <execution> -->
        <!-- <id>make-assembly</id> -->
        <!-- <phase>package</phase> -->
        <!-- <goals> -->
        <!-- <goal>single</goal> -->
        <!-- </goals> -->
        <!-- </execution> -->
        <!-- </executions> -->
        <!-- </plugin> -->

        <!-- mybatis自动生成代码的插件 -->
        <plugin>
          <groupId>org.mybatis.generator</groupId>
          <artifactId>mybatis-generator-maven-plugin</artifactId>
          <version>${mybatis-generator-maven-plugin.version}</version>
          <configuration>
            <configurationFile>${basedir}/src/main/resources/generatorConfig.xml</configurationFile>
            <overwrite>true</overwrite>
            <verbose>true</verbose>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>mysql</groupId>
              <artifactId>mysql-connector-java</artifactId>
              <version>${mysql.version}</version>
            </dependency>
            <dependency>
              <groupId>com.littlefisher</groupId>
              <artifactId>core-base</artifactId>
              <version>${project.version}</version>
            </dependency>
            <dependency>
              <groupId>tk.mybatis</groupId>
              <artifactId>mapper</artifactId>
              <version>${mapper.version}</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
