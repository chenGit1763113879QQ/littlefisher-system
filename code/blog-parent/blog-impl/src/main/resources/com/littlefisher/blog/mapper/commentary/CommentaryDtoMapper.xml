<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.littlefisher.blog.dao.commentary.CommentaryDtoMapper">
  <resultMap id="BaseResultMap" type="com.littlefisher.blog.model.commentary.CommentaryDto">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_commentary_id" jdbcType="INTEGER" property="parentCommentaryId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="commentary_ip" jdbcType="VARCHAR" property="commentaryIp" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="post_id" jdbcType="INTEGER" property="postId" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="state_date" jdbcType="TIMESTAMP" property="stateDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.littlefisher.blog.model.commentary.CommentaryDto">
    <!--@mbg.generated-->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, parent_commentary_id, user_id, nick_name, commentary_ip, created_date, post_id, 
    state, state_date
  </sql>
  <sql id="Blob_Column_List">
    <!--@mbg.generated-->
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.littlefisher.blog.model.commentary.CommentaryDtoExample" resultMap="ResultMapWithBLOBs">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from commentary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.littlefisher.blog.model.commentary.CommentaryDtoExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commentary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.littlefisher.blog.model.commentary.CommentaryDtoExample">
    <!--@mbg.generated-->
    delete from commentary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="selectOne" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commentary
  </select>

  <resultMap id="BaseResultMapWithModels" type="com.littlefisher.blog.model.commentary.CommentaryDto">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_commentary_id" jdbcType="INTEGER" property="parentCommentaryId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="commentary_ip" jdbcType="VARCHAR" property="commentaryIp" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="post_id" jdbcType="INTEGER" property="postId" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="state_date" jdbcType="TIMESTAMP" property="stateDate" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <association property="author" javaType="com.littlefisher.blog.model.user.UserDto">
      <id column="author_id" jdbcType="INTEGER" property="id" />
      <result column="a_acc_nbr" jdbcType="VARCHAR" property="accNbr" />
      <result column="a_password" jdbcType="VARCHAR" property="password" />
      <result column="a_email" jdbcType="VARCHAR" property="email" />
      <result column="a_real_name" jdbcType="VARCHAR" property="realName" />
      <result column="a_nick_name" jdbcType="VARCHAR" property="nickName" />
      <result column="a_en_name" jdbcType="VARCHAR" property="eName" />
      <result column="a_qq" jdbcType="VARCHAR" property="qq" />
      <result column="a_wechat" jdbcType="VARCHAR" property="wechat" />
      <result column="a_phone_nbr" jdbcType="VARCHAR" property="phoneNbr" />
      <result column="a_user_desc" jdbcType="VARCHAR" property="userDesc" />
      <result column="a_state" jdbcType="CHAR" property="state" />
      <result column="a_reg_date" jdbcType="TIMESTAMP" property="regDate" />
      <result column="a_last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
    </association>
    <association property="commentaryState" javaType="com.littlefisher.blog.model.commentary.CommentaryStateDto">
      <id column="cs_state" jdbcType="CHAR" property="state" />
      <result column="cs_state_name" jdbcType="VARCHAR" property="stateName" />
      <result column="cs_comments" jdbcType="VARCHAR" property="comments" />
    </association>
  </resultMap>
  <sql id="commentaryColumns">
    ${alias}.id, ${alias}.parent_commentary_id, ${alias}.user_id, ${alias}.nick_name, ${alias}.commentary_ip,
    ${alias}.created_date, ${alias}.post_id, ${alias}.state, ${alias}.state_date, ${alias}.content
  </sql>
  <sql id="authorColumns">
    ${alias}.id ${prefix}id, ${alias}.acc_nbr ${prefix}acc_nbr, ${alias}.password ${prefix}password,
    ${alias}.email ${prefix}email, ${alias}.real_name ${prefix}real_name,
    ${alias}.nick_name ${prefix}nick_name, ${alias}.en_name ${prefix}en_name,
    ${alias}.qq ${prefix}qq, ${alias}.wechat ${prefix}wechat,
    ${alias}.phone_nbr ${prefix}phone_nbr, ${alias}.user_desc ${prefix}user_desc,
    ${alias}.state ${prefix}state, ${alias}.reg_date ${prefix}reg_date,
    ${alias}.last_login_date ${prefix}last_login_date
  </sql>
  <sql id="commentaryStateColumns">
    ${alias}.state ${prefix}state, ${alias}.state_name ${prefix}state_name, ${alias}.comments ${prefix}comments
  </sql>
  <select id="selectByCond" parameterType="com.littlefisher.blog.request.commentary.GetCommentaryList4PagerByCondRequest"
          resultMap="BaseResultMapWithModels">
    select
    <include refid="commentaryColumns">
      <property name="alias" value="a" />
    </include>
    ,
    <include refid="authorColumns">
      <property name="alias" value="b" />
      <property name="prefix" value="a_" />
    </include>
    ,
    <include refid="commentaryStateColumns">
      <property name="alias" value="c"/>
      <property name="prefix" value="cs_"/>
    </include>
    from commentary a
    left join user b on a.user_id = b.id
    left join commentary_state c on a.state = c.state
    <where>
      <if test="postId != null">
        and a.post_id = #{postId, jdbcType=INTEGER}
      </if>
      <if test="keyword != null">
        and a.content like concat('%', #{keyword,jdbcType=VARCHAR}, '%')
      </if>
      <if test="createdDateStart != null">
        and a.created_date &gt;= #{createdDateStart, jdbcType=TIMESTAMP}
      </if>
      <if test="createdDateEnd != null">
        and a.created_date &lt;= #{createdDateEnd, jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
</mapper>